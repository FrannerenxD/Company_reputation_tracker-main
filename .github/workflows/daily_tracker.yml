name: Company Reputation Tracker

on:
  schedule:
    - cron: '30 17 * * *'  # 5:30 PM UTC daily
  workflow_dispatch:  # Allow manual triggering

jobs:
  update_and_deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write  # Required for pages deployment
    
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
    
    # GitHub Pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nltk
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
      
      - name: Run data processing pipeline
        run: |
          # Initialize DB and directories
          mkdir -p logs assets/data backups
          python -c "from db import init_db; init_db()"
          
          # Backup database
          cp -f company_tracker.db backups/company_tracker_$(date +%Y%m%d).db 2>/dev/null || echo "No database to backup yet"
          
          # Process data and generate static files
          python runner.py --all --limit 20 || python runner.py --generate-only
          python generate_static_data.py
          
          # Verify files were generated
          if [ -f "assets/data/dashboard_data.json" ]; then
            echo "✅ Static data generated successfully"
          else
            echo "❌ Failed to generate static data"
            exit 1
          fi
      
      - name: Commit changes
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add assets/data/*.json company_tracker.db logs/*.log || true
          git diff --staged --quiet || git commit -m "Update dashboard data [skip ci]"
          git push || echo "No changes to push or push failed"
      
      # Setup Pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      # Build with Jekyll
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
          
      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3  # Use this artifact uploader first
        with:
          name: github-pages
          path: ./_site
          if-no-files-found: error
      
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
