name: Daily Company Reputation Tracker

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '30 17 * * *'
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  track_reputation:
    runs-on: ubuntu-latest
    
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEWSAPI_KEY: ${{ secrets.NEWSAPI_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Ensure NLTK is explicitly installed
          pip install nltk
          # Download NLTK data
          python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
      
      - name: Check API keys
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "Warning: OPENAI_API_KEY is not set. Sentiment analysis may not work properly."
          fi
          if [ -z "$NEWSAPI_KEY" ]; then
            echo "Warning: NEWSAPI_KEY is not set. News fetching may not work properly."
          fi
      
      - name: Run reputation tracker
        run: |
          # List installed packages for debugging
          pip list
          # Try running with error output
          python runner.py --generate-only || { echo "Error running script, attempting fallback"; ls -la; }
      
      - name: Generate static data files
        run: |
          python generate_static_data.py || { echo "Error generating static data"; ls -la assets/ || echo "Assets directory not found"; }
      
      - name: Verify data files were generated
        run: |
          if [ -f "assets/data/dashboard_data.json" ] && [ -f "assets/data/companies.json" ]; then
            echo "Data files successfully generated"
            echo "Contents:"
            ls -la assets/data/
          else
            echo "Warning: Some data files are missing"
            echo "Current directory content:"
            ls -la
            echo "Assets directory content (if exists):"
            ls -la assets/ || echo "Assets directory not found"
          fi
      
      - name: Check for changes
        id: check_changes
        run: |
          git status --porcelain assets/data/ company_tracker.db
          if [[ $(git status --porcelain assets/data/ company_tracker.db) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in data files or database"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in data files or database"
          fi
      
      - name: Commit and push if changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add assets/data/*.json company_tracker.db
          git commit -m "Update dashboard data and database [skip ci]"
          git push
